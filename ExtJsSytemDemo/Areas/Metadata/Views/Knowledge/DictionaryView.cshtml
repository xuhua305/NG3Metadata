@{
    ViewBag.Title = "DictionaryView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section script
{

    <script type="text/javascript" src="../../../../Scripts/ngcommon.js"></script>
    <script type="text/javascript" src="../../../../Scripts/languagewindow.js"></script>
    <script type="text/javascript">
        var otype = '@ViewBag.OType';
        var buskey = '@ViewBag.Id';
        var transferData = Ext.JSON.decode(Ext.htmlDecode('@ViewBag.TransferData'));
        var transferGridData = Ext.JSON.decode(Ext.htmlDecode('@ViewBag.TransferGridData'));
    </script>   
    <script src="@Url.Content("~/AppJS/Metadata/Dictionary/app.js")" type="text/javascript" charset="utf-8"></script>
@*    <script type="text/javascript">
        Ext.onReady(function () {
            Ext.QuickTips.init();

            var ngToolbar = Ext.create('Ext.ng.Toolbar',
                {
                    region: 'north',
                    //renderTo: 'toolbar',
                    border: false,
                    //split: true,
                    height: 26,
                    minSize: 26,
                    maxSize: 26,
                    ngbuttons: [
                        'save', "->", 'close'
                    ]
                });
            
            var ngChildToolbar = Ext.create('Ext.ng.Toolbar',
                {
                    region: 'north',
                    //renderTo: 'toolbar',
                    border: false,
                    //split: true,
                    height: 26,
                    minSize: 26,
                    maxSize: 26,
                    items: [
                        {
                            id: "addrow",
                            text: '增行',
                            iconCls: 'add'
                        },
                        {
                            id: "deleterow",
                            text: '删行',
                            iconCls: 'cross'
                        }
                    ]
                });

            var baseNodeInfoPanel = Ext.create('Ext.ng.TableLayoutForm', {
                buskey: 'id',
                otype: otype,
                columnsPerRow: 3,
                fields: [{
                    id: 'Id',
                    xtype: 'ngText',
                    fieldLabel: '编号',
                    name: 'Id',
                    hidden: true
                }, {
                    id: 'ParentId',
                    xtype: 'ngText',
                    fieldLabel: '父亲节点编号',
                    name: 'ParentId',
                    hidden: true
                }, {
                    id: 'ParentVersionId',
                    xtype: 'ngText',
                    fieldLabel: '父亲节点版本编号',
                    name: 'ParentVersionId',
                    hidden: true
                }, {
                    id: 'Name',
                    xtype: 'ngText',
                    fieldLabel: '名称',
                    name: 'Name',
                    mustInput: true
                }, {
                    id: 'CurrentDisplayName',
                    xtype: 'ngText',
                    fieldLabel: '显示名称',
                    name: 'CurrentDisplayName',
                    mustInput: true
                }, {
                    id: 'DisplayName',
                    xtype: 'ngText',
                    fieldLabel: '显示名称',
                    name: 'DisplayName',
                    hidden: true
                }, {
                    id: 'Namespace',
                    xtype: 'ngText',
                    fieldLabel: '命名空间',
                    name: 'Namespace'
                }, {
                    id: 'Version',
                    xtype: 'ngText',
                    fieldLabel: '版本',
                    name: 'Version'
                }, {
                    id: 'Remark',
                    xtype: 'ngTextArea',
                    fieldLabel: '备注',
                    name: 'Remark',
                    colspan: 3
                }]
            });

            var bizNodeInfoPanel = Ext.create('Ext.ng.TableLayoutForm', {
                buskey: 'id',
                otype: otype,
                columnsPerRow: 3,
                fields: [{
                    xtype: 'combo',
                    store: industryStyleStore,
                    fieldLabel: '行业化分类',
                    queryMode: 'local',
                    id: 'IndustryStyle',
                    name: 'IndustryStyle',
                    valueField: 'value',
                    displayField: 'text'
                }, {
                    xtype: 'combo',
                    store: yesAndNo,
                    fieldLabel: '权限控制',
                    queryMode: 'local',
                    id: 'IsHaveRights',
                    name: 'IsHaveRights',
                    valueField: 'value',
                    displayField: 'text'
                }, {
                    xtype: 'combo',
                    store: yesAndNo,
                    fieldLabel: '敏感数据',
                    queryMode: 'local',
                    id: 'IsSensitive',
                    name: 'IsSensitive',
                    valueField: 'value',
                    displayField: 'text'
                }, {
                    id: 'Description',
                    xtype: 'ngTextArea',
                    fieldLabel: '业务描述',
                    name: 'Description',
                    colspan: 3
                }]
            });

            //var techNodeInfoPanel = Ext.create('Ext.ng.TableLayoutForm', {
            //    buskey: 'id',
            //    otype: 'add',
            //    columnsPerRow: 3
            //});
            
            Ext.define('gridModel', {                //编辑状态下,状态列的下拉菜单的 model
                extend: 'Ext.data.Model',
                fields: [{
                    name: 'Id',
                    type: 'string'
                }, {
                    name: 'ContentItem',
                    type: 'string'
                }, {
                    name: 'Description',
                    type: 'string'
                }]
            });

            var gridStore = Ext.create('Ext.data.Store', {
                model: 'gridModel'
            });

            var cellEditing = Ext.create('Ext.grid.plugin.CellEditing', {
                clicksToEdit: 1
            });

            var dicContentGrid = Ext.create('Ext.ng.GridPanel', {

                region: 'center',
                layout: 'border',
                flex: 2,
                //renderTo: 'gridpanel',
                //frame: true,
                store: gridStore,
                columnLines: true,
                buskey: 'id', //对应的业务表主键
                otype: otype, //操作类型,add||edit
                //autoScroll: true,
                //selType: 'cellmodel',
                //selModel: Ext.create('Ext.selection.CheckboxModel'),
                layout: {
                    //type: 'hbox',
                    align: 'stretch'
                },
                columns: [Ext.create('Ext.grid.RowNumberer', { text: '行号', width: 35 }),
                    {
                        header: '编号',
                        flex: 1,
                        dataIndex: 'Id',
                        hidden: true
                    }, {
                        header: '内容',
                        flex: 1,
                        sortable: true,
                        dataIndex: 'ContentItem',
                        editor: {
                            allowBlank: false
                        }
                    }, {
                        header: '描述',
                        flex: 1,
                        sortable: true,
                        dataIndex: 'Description',
                        editor: {
                            allowBlank: true
                        }
                    }],
                viewConfig: {
                    forceFit: true,
                    scrollOffset: 0
                },
                //forceFit: true,
                plugins: [cellEditing]
            });

            var contentInfoPanel = Ext.create('Ext.ng.FormPanel', {
                region: 'center',
                items: [ngChildToolbar, dicContentGrid]
            });

            var tabPanel = Ext.create('Ext.tab.Panel', {
                //renderTo: 'tabpanel',
                //xtype: 'tabpanel',
                flex: 1,
                region: 'center',
                deferredRender: false,
                plain: true,
                activeTab: 0,
                //height: 600,
                defaults: { bodyStyle: 'padding:3px' },
                items: [{
                    layout: 'border', //使grid填充                
                    title: '基本信息',
                    //autoScroll: true,
                    //height:400,
                    //defaults: { width: 230 },
                    //defaultType: 'textfield',
                    items: [baseNodeInfoPanel]
                }, {
                    layout: 'border', //使grid填充             
                    title: '业务信息',
                    //autoScroll: true,
                    //contentEl: 'center1',
                    //defaults: { width: 230 },
                    //defaultType: 'textfield',
                    items: [bizNodeInfoPanel]
                }, {
                    layout: 'border', //使grid填充             
                    title: '技术信息'
                    //autoScroll: true,
                    //contentEl: 'center1',
                    //defaults: { width: 230 },
                    //defaultType: 'textfield',
                    //items: [techNodeInfoPanel]
                }, {
                    layout: 'border', //使grid填充             
                    title: '字典内容',
                    //autoScroll: true,
                    //contentEl: 'center1',
                    //defaults: { width: 230 },
                    //defaultType: 'textfield',
                    items: [contentInfoPanel]
                }]
            });

            Ext.create('Ext.container.Viewport', {
                id: "mainViewPort",
                layout: 'border',
                items:
                [
                    ngToolbar, tabPanel
                ]
            });

            var namespace = Ext.getCmp('Namespace');
            var version = Ext.getCmp('Version');
            var name = Ext.getCmp('Name');
            var currentDisplayName = Ext.getCmp('CurrentDisplayName');
            var displayName = Ext.getCmp('DisplayName');
            var id = Ext.getCmp('Id');
            var parentId = Ext.getCmp('ParentId');
            var description = Ext.getCmp('Description');

            var currentDisplayNameWin = Ext.create('Ext.ng.languageWin');
            var descriptionWin = Ext.create('Ext.ng.languageWin');

            name.on('change', function (newValue, oldValue, eOpts) {
                namespace.setValue(transferData.Namespace + '.' + newValue.getValue());
            });

            if (otype == oType.Add) {
                id.setValue(buskey);
                parentId.setValue(transferData.ParentId);
                namespace.setReadOnly(true);
                namespace.setValue(transferData.Namespace + '.');
                version.setReadOnly(true);
                version.setValue('1.0.0.0');

                name.setValue(transferData.Name);
                currentDisplayName.setValue(transferData.CurrentDisplayName);
            }
            else if (otype == oType.Edit) {
                var baseNodeInfoForm = baseNodeInfoPanel.getForm();
                var bizNodeInfoForm = bizNodeInfoPanel.getForm();
                baseNodeInfoForm.setValues(transferData);
                bizNodeInfoForm.setValues(transferData);
                currentDisplayName.setValue(transferData.CurrentDisplayName);
                
                gridStore.insert(gridStore.getCount(), transferGridData);
            }
            
            currentDisplayName.on('focus', function (the, eOpts) {
                currentDisplayNameWin.showLanguageInfoWindow();
            });

            description.on('focus', function (the, eOpts) {
                descriptionWin.showLanguageInfoWindow();
            });
            
            var frame = $GetWFrame();
            if (frame) {
                var listref = Ext.create('Ext.ng.LanguageRefresher');
                frame.ListObserver.add('list', listref);
                listref.on('RefreshLanguage', function () {
                    currentDisplayName.setValue(currentDisplayNameWin.getCurrentLanguageValue());
                    description.setValue(descriptionWin.getCurrentLanguageValue());
                });
            }


            //保存
            ngToolbar.get("save").on('click', function () {
                
                if (!baseNodeInfoPanel.isValid() || !bizNodeInfoPanel.isValid() || !dicContentGrid.isValid()) {
                    alert('格式不符合要求');
                    return;
                }
                var mergeData = MergeFormData([baseNodeInfoPanel, bizNodeInfoPanel], 'id', otype);
                var gridData = dicContentGrid.getAllGridData();


                var action = '';
                switch (otype) {
                    case oType.Add:
                        action = "AddDictionary";
                        break;
                    case oType.Edit:
                        action = "UpdateDictionary";
                        break;
                    default:
                }
                
                var displayNameData = currentDisplayNameWin.getLanguageGridInfo();
                var descriptionData = descriptionWin.getLanguageGridInfo();

                Ext.Ajax.request({
                    params: { 'mergeData': mergeData, 'gridData': gridData, 'displayNameData': displayNameData, 'descriptionData': descriptionData },
                    url: '@Url.Content("~/Knowledge/")' + action,
                    success: function (response) {
                        var resp = Ext.JSON.decode(response.responseText);
                        if (resp.status === "ok") {
                            if (resp.id && resp.id.length != 0 && resp.name && resp.name.length != 0) {
                                top.setCurrentNodeValue(resp.id, resp.name);
                            }
                            $CloseTab();
                        } else {
                            Ext.MessageBox.alert('保存失败', resp.status);
                        }
                    }
                });


            });
            
            //增行
            ngChildToolbar.items.get('addrow').on('click', function () {

                var data = [{
                    'Id': '',
                    'ContentItem': '',
                    'Description': ''
                }];

                var count = gridStore.getCount();
                gridStore.insert(count, data);
                dicContentGrid.getSelectionModel().select(count);
                //             for (var i = 0; i < 1; i++) {
                //                 store.loadData(data, true); //在store的最后添加一行数据
                //             }

            });
            
            //删行
            ngChildToolbar.items.get('deleterow').on('click', function () {
                //;
                var data = dicContentGrid.getSelectionModel().getSelection();
                if (data.length > 0) {
                    Ext.Array.each(data, function(record) {
                        gridStore.remove(record); //前端删除

                    });

                }

            });

        });

    </script>*@
}
