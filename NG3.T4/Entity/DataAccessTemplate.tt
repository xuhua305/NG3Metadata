<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="NG3.Metadata.Core" #>

<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="NG3.Metadata.Core.Entity" #>
<#@ output extension=".txt" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;

using NG3.Data;
using NG3.Data.Service;
using SUP.Common.Base;
using SUP.Common.DataAccess;

namespace <#= _metadataForEntity.Namespace #>
{
	public class <#=_metadataForEntity.Name#>Dac
    {
        public DataTable GetMasters(string clientJson,int pageSize, int PageIndex, ref int totalRecord)
        {
            try
            {
				string sql = "<#=_metadataForEntity.Sql#>";
                string sortField =  " <#=_metadataForEntity.KeyMapColumn#> asc ";
                DataTable dt = null;
                if (!string.IsNullOrEmpty(clientJson))
                {
                    string query = string.Empty;
                    IDataParameter[] p = DataConverterHelper.BuildQueryWithParam(clientJson, string.Empty, ref query);

                    if (!string.IsNullOrEmpty(query))
                    {
                        sql += " where " + query;
                    }

                    string sqlstr = PaginationAdapter.GetPageDataSql(sql, pageSize, ref PageIndex, ref totalRecord, sortField, p);
                    dt = DbHelper.GetDataTable(sqlstr, p);
                }
                else
                {
                    string sqlstr = PaginationAdapter.GetPageDataSql(sql, pageSize, ref PageIndex, ref totalRecord, sortField);
                    dt = DbHelper.GetDataTable(sqlstr);
                }
                return dt;
            }
            catch(Exception e)
            {
                throw;
            }
        }

        public DataTable GetMaster(int id)
        {
		
            try
            {
				string sql = "select * from hr_employee where hr_employee.id={0}";
				IDataParameter[] p = new NGDataParameter[1];
				p[0] = new NGDataParameter("id", id);
				return DbHelper.GetDataTable(sql, p);
            }
            catch(Exception e)
            {
                throw;
            }
        }

        public void UpdateMaster(DataTable masterData)
        {

        }

        public void DeleteMaster(int id)
        {
			try
            {
				string sql = "delete from <#=_metadataForEntity.UpdateTable#> where id='" + id + "'";
				int iret = DbHelper.ExecuteNonQuery(sql);
            }
            catch(Exception e)
            {
                throw;
            }
			
        }
    }
}